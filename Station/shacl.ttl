@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix dmop: <http://www.e-lico.eu/ontologies/dmo/DMOP/DMKB.owl> .

#The prefix for PHT specific data; this should be changed later on.
@prefix pht: <https://github.com/LaurenzNeumann/PHTMetadata#> .

pht:StationShape
    rdf:type sh:NodeShape ;
    sh:targetClass pht:Station ;
    sh:description "A station providing data for the PHT" ;
    sh:property [
        sh:path pht:creator ;
        sh:name "Train Creator" ;
        sh:class foaf:Agent ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path pht:responsibleForStation ;
        sh:name "Responsible for the station" ;
        sh:class foaf:Agent ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path pht:certificate ;
        sh:name "Certification" ;
        sh:description "One or more certificates providing additional trust in the station" ;
        sh:class pht:Certificate ;
    ] ;
    sh:property [
        sh:path pht:description ;
        sh:name "Station Description" ;
        sh:datatype xsd:string ;
    ] ; 
    sh:property [
        sh:path pht:title ;
        sh:name "Station Title" ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path pht:right ;
        sh:name "Station Rights" ;
        sh:datatype xsd:string ;
    ] ;  
    sh:property [
        sh:path pht:longitude ;
        sh:name "The Longitude of the coordinate of the station" ;
        sh:datatype xsd:float ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path pht:latitude ;
        sh:name "The Latitude of the coordinate of the station" ;
        sh:datatype xsd:float ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path pht:computationalEnvironment ;
        sh:name "Computational Environment" ;
        sh:class pht:ComputationalEnvironment;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path pht:dataSet ;
        sh:name "Data Set" ;
        sh:or (
            [ 
                sh:class pht:TabularDataSet ;
            ]
            [ 
                sh:class pht:FileDataSet ;
            ]
        ) ;
        sh:minCount 1 ;
    ] ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) .

# ExecutionEnvironment

pht:ExecutionEnvironmentShape
    rdf:type sh:NodeShape ;
    sh:targetClass pht:ExecutionEnvironment ;
    sh:description "An execution environment provided by a station" ;
    sh:property [
        sh:path pht:estimatedGFLOPS ;
        sh:name "The computation power of the environment in GLFOPS (estimation)" ;
        sh:datatype xsd:float ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path pht:supportsOCI ;
        sh:name "States whether the environment allows the execution of OCI container" ;
        sh:datatype xsd:boolean ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path pht:programmingLanguageSupport ;
        sh:description "States which programming languages are supported by the environment; the programming languages are expressed with the subclasses of programming languages from the software ontology" ;
        sh:class <http://purl.obolibrary.org/obo/IAO_0000025>;
        sh:name "Supported Programming languages" ;
    ] ;
    sh:property [
        sh:path pht:hasCUDASupport ;
        sh:name "States whether the environment allows the execution CUDA acclerated software" ;
        sh:datatype xsd:boolean ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path pht:maximumNumberOfModelsSupported ;
        sh:name "States the maximum number of supported models" ;
        sh:datatype xsd:integer ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path pht:maximumModelSizeKilobytesSupported ;
        sh:name "The maximum size of a model supported" ;
        sh:datatype xsd:integer ;
        sh:maxCount 1 ;
    ] ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) .

# DataSet

pht:DataSetShape
    rdf:type sh:NodeShape ;
    sh:targetClass pht:DataSet ;
    sh:description "A data set provided by a station" ;
    sh:property [
        sh:path pht:identifierToStation ;
        sh:name "Identifies the data set" ;
        sh:maxCount 1 ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path pht:description ;
        sh:name "Station Description" ;
        sh:datatype xsd:string ;
    ] ; 
    sh:property [
        sh:path pht:theme ;
        sh:name "Theme of the dataset" ;
        sh:class skos:Concept ;
    ] ;
    sh:property [
        sh:path pht:pid ;
        sh:name "Identifier of the dataset" ;
        sh:description "This attribute can be used to persistently and globally identify the provided dataset, allowing additional references about domain-specific metadata descriptions." ;
    ] ;
    sh:property [
        sh:path pht:license ;
        sh:name "License" ;
        # SWO has a weird naming scheme:
        sh:class <http://www.ebi.ac.uk/swo/SWO_0000002>;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path pht:right ;
        sh:name "Legal information about the station" ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path pht:accessURL ;
        sh:name "URL through which the data can be accessed" ;
        sh:datatype xsd:string ;
    ] ;
    sh:property [
        sh:path pht:accessConstrain ;
        sh:name "Access constrain information" ;
        sh:in ( pht:accessConstrainRequestNeeded pht:accessConstrainUnconstrained pht:accessConstrainNoAccess ) ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path pht:usedDifferentialPrivacy ;
        sh:name "Differential Privacy Method" ;
        sh:description "This property indicates the differential privacy method used for anonymizing the data set" ;
        sh:or (
                [ 
                    sh:class pht:DifferentialPrivacyKAnonymity 
                ] 
                [ 
                    sh:class pht:DifferentialPrivacyLDiversity
                ] 
                [ 
                    sh:class pht:DifferentialPrivacyTCloseness
                ]
                [ 
                    sh:class pht:DifferentialPrivacyDifferentialPrivacy
                ]  
        ) ;
    ] ;
    sh:property [
        sh:path pht:dataSetCharacteristic ;
        sh:name "Data Set characteristic" ;
        sh:class dmop:DataSetCharacteristics ;
    ] ;
    sh:ignoredProperties ( rdf:type ) .

pht:DifferentialPrivacyKAnonymityShape 
    rdf:type sh:NodeShape ;
    sh:targetClass pht:DifferentialPrivacyKAnonymity ;
    sh:property [
        sh:path pht:parameter ;
        sh:name "Required parameter" ;
        sh:datatype xsd:float ;
        sh:minCount 1 ;
    ] ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) .

pht:DifferentialPrivacyLDiversityShape 
    rdf:type sh:NodeShape ;
    sh:targetClass pht:DifferentialPrivacyLDiversity ;
    sh:property [
        sh:path pht:parameter ;
        sh:name "Required parameter" ;
        sh:datatype xsd:float ;
        sh:minCount 1 ;
    ] ;  
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) .

pht:DifferentialPrivacyTClosenessShape 
    rdf:type sh:NodeShape ;
    sh:targetClass pht:DifferentialPrivacyTCloseness ;
    sh:property [
        sh:path pht:parameter ;
        sh:name "Required parameter" ;
        sh:datatype xsd:float ;
        sh:minCount 1 ;
    ] ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) .

pht:DifferentialPrivacyDifferentialPrivacyShape 
    rdf:type sh:NodeShape ;
    sh:targetClass pht:DifferentialPrivacyDifferentialPrivacy ;
    sh:property [
        sh:path pht:parameter ;
        sh:name "Required parameter" ;
        sh:datatype xsd:float ;
        sh:minCount 1 ;
    ] ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) .

# TabularDataSet

pht:TabularDataSetShape
    rdf:type sh:NodeShape ;
    sh:targetClass pht:TabularDataSet ;
    sh:description "A Data set in a tabular form" ;
    sh:property [
        sh:path pht:dataFormat ;
        sh:name "Further specifies the data format" ;
        sh:class dmop:DataFormat ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path pht:attribute ;
        sh:name "Attribute of the table" ;
        sh:class pht:TabularDataSetAttribute ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path pht:fileType ;
        sh:name "File type" ;
        sh:description "File type if stored in file, expressed with a MIME type expression" ;
    ] ;
    sh:closed true ;
    sh:ignoredProperties ( rdf:type ) .

pht:TabularDataSetAttributeShape
    rdf:type sh:NodeShape ;
    sh:targetClass pht:TabularDataSetAttribute ;
    sh:description "An attribute/column of a tabular data set" ;
    sh:property [
        sh:path pht:dataType ;
        sh:name "specifies the data type" ;
        sh:class dmop:DataType ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path pht:key ;
        sh:name "Access key" ;
        sh:description "The key to access the attribute/column (e.g.column name)" ;
        sh:datatype xsd:string;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path pht:description ;
        sh:name "Description" ;
        sh:datatype xsd:string;
    ] ;
    sh:property [
        sh:path pht:theme ;
        sh:name "Theme of the attribute" ;
        sh:class skos:Concept ;
    ] ;
    #sh:closed true ;
    sh:ignoredProperties ( rdf:type ) .

# FileDataSet

pht:FileDataSetShape
    rdf:type sh:NodeShape ;
    sh:targetClass pht:FileDataSet ;
    sh:description "A Data set in a form of one or more files" ;
    sh:property [
        sh:path pht:fileType ;
        sh:name "File type" ;
        sh:description "The type of the file, expressed with a MIME type" ;
        sh:datatype xsd:string;
        sh:maxCount 1 ;
    ] ;
    #sh:closed true ;
    sh:ignoredProperties ( rdf:type  ) .